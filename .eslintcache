[{"C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\index.js":"1","C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\App.js":"2","C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Login-Register\\Signup.js":"3","C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Student\\pages\\StudentDeadlines.js":"4","C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Student\\pages\\StudentModules.js":"5","C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Student\\pages\\StudentHome.js":"6","C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Student\\pages\\StudentThreads.js":"7","C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Student\\pages\\StudentDiscussionBoard.js":"8","C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Student\\pages\\StudentAssignment.js":"9","C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Student\\pages\\GiveFeedbackModuleList.js":"10","C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Student\\pages\\GiveFeedbackPage.js":"11","C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Student\\pages\\StudentResults.js":"12","C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Student\\pages\\StudentAssignmentView.js":"13","C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Student\\pages\\StudentAssignmentDetails.js":"14","C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Admin\\pages\\AdminAnalytics.js":"15","C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Admin\\pages\\AdminHome.js":"16","C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Admin\\pages\\AdminDiscussionBoard.js":"17","C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Admin\\pages\\AdminClasses.js":"18","C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Admin\\pages\\ViewFeedbackPage.js":"19","C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Admin\\pages\\ViewFeedbackModuleList.js":"20","C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Admin\\pages\\AdminThreads.js":"21","C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Admin\\pages\\AdminAssignments.js":"22","C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Admin\\pages\\AssignmentDetails.js":"23","C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Admin\\pages\\ViewAssignments.js":"24","C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\firebase.js":"25","C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Login-Register\\SignupComponent.js":"26","C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Student\\components\\welcomeUser.js":"27","C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Student\\NavBar\\StudentNavBar.js":"28","C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Student\\components\\DeadlinesFetch.js":"29","C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Student\\components\\StudentAssignmentModuleList.js":"30","C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Student\\components\\DiscussionBoard.js":"31","C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Student\\components\\StudentThreadsList.js":"32","C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Student\\components\\StudentAssignmentList.js":"33","C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Student\\components\\GiveFeedbackModuleListComp.js":"34","C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Student\\components\\GiveGeneralFeedback.js":"35","C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Student\\components\\StudentModuleGroup.js":"36","C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Student\\components\\GiveFeedbackPageComp.js":"37","C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Student\\components\\AssignmentSubmit.js":"38","C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Student\\components\\StudentAssignmentDetailsComp.js":"39","C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\DataAnalysis\\Graph.js":"40","C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Admin\\NavBar\\AdminNavBar.js":"41","C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Admin\\components\\AssignmentDetailsPage.js":"42","C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Admin\\components\\AssignmentForm.js":"43","C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Admin\\components\\FinishedGrading.js":"44","C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Admin\\components\\AdminGetSubmissions.js":"45","C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Admin\\components\\Assignments.js":"46","C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Admin\\components\\deleteThread.js":"47","C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Admin\\components\\Threads.js":"48","C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Admin\\components\\AssignmentList.js":"49","C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Admin\\components\\createThread.js":"50","C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Admin\\components\\ModuleThreadsListComp.js":"51","C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Admin\\components\\ViewFeedbackPageComp.js":"52","C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Admin\\components\\AssignmentsListed.js":"53","C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Admin\\components\\ModuleGroup.js":"54","C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Student\\NavBar\\StudentMenuItems.js":"55","C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Login-Register\\Logout.js":"56","C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Admin\\components\\AdminSubmissionDisplay.js":"57","C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Admin\\components\\createModule.js":"58","C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Admin\\components\\ModulePage.js":"59","C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Admin\\NavBar\\AdminMenuItems.js":"60","C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\DataAnalysis\\TestingEasySolution.js":"61","C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Student\\components\\StudentModulePage.js":"62","C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\DataAnalysis\\SimpleBarFormat.js":"63","C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Admin\\components\\deleteModule.js":"64","C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\DataAnalysis\\BarChart.js":"65","C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\DataAnalysis\\Median.js":"66","C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\DataAnalysis\\Quartiles.js":"67"},{"size":447,"mtime":1611847016598,"results":"68","hashOfConfig":"69"},{"size":4252,"mtime":1611847016566,"results":"70","hashOfConfig":"69"},{"size":5614,"mtime":1611847016578,"results":"71","hashOfConfig":"69"},{"size":807,"mtime":1611847016594,"results":"72","hashOfConfig":"69"},{"size":440,"mtime":1611847016596,"results":"73","hashOfConfig":"69"},{"size":5702,"mtime":1611847016595,"results":"74","hashOfConfig":"69"},{"size":541,"mtime":1611847016597,"results":"75","hashOfConfig":"69"},{"size":1116,"mtime":1611847016595,"results":"76","hashOfConfig":"69"},{"size":730,"mtime":1611847142401,"results":"77","hashOfConfig":"69"},{"size":541,"mtime":1611847016591,"results":"78","hashOfConfig":"69"},{"size":3409,"mtime":1611847016592,"results":"79","hashOfConfig":"69"},{"size":486,"mtime":1611847016596,"results":"80","hashOfConfig":"69"},{"size":1370,"mtime":1611847142403,"results":"81","hashOfConfig":"69"},{"size":1645,"mtime":1611847142402,"results":"82","hashOfConfig":"69"},{"size":554,"mtime":1611847016561,"results":"83","hashOfConfig":"69"},{"size":4924,"mtime":1611847016563,"results":"84","hashOfConfig":"69"},{"size":1066,"mtime":1611847016562,"results":"85","hashOfConfig":"69"},{"size":403,"mtime":1611847016562,"results":"86","hashOfConfig":"69"},{"size":1270,"mtime":1611847016566,"results":"87","hashOfConfig":"69"},{"size":601,"mtime":1611847016565,"results":"88","hashOfConfig":"69"},{"size":670,"mtime":1611847016564,"results":"89","hashOfConfig":"69"},{"size":652,"mtime":1611847142395,"results":"90","hashOfConfig":"69"},{"size":1927,"mtime":1611847142396,"results":"91","hashOfConfig":"69"},{"size":1264,"mtime":1611847142397,"results":"92","hashOfConfig":"69"},{"size":797,"mtime":1611847016597,"results":"93","hashOfConfig":"69"},{"size":3183,"mtime":1611847016579,"results":"94","hashOfConfig":"69"},{"size":1245,"mtime":1611847016588,"results":"95","hashOfConfig":"69"},{"size":1412,"mtime":1611847016581,"results":"96","hashOfConfig":"69"},{"size":4017,"mtime":1611847016582,"results":"97","hashOfConfig":"69"},{"size":1710,"mtime":1611847142400,"results":"98","hashOfConfig":"69"},{"size":4998,"mtime":1611847016582,"results":"99","hashOfConfig":"69"},{"size":1625,"mtime":1611847016587,"results":"100","hashOfConfig":"69"},{"size":3035,"mtime":1611847142399,"results":"101","hashOfConfig":"69"},{"size":1676,"mtime":1611847016583,"results":"102","hashOfConfig":"69"},{"size":1980,"mtime":1611847016584,"results":"103","hashOfConfig":"69"},{"size":1598,"mtime":1611847016586,"results":"104","hashOfConfig":"69"},{"size":3751,"mtime":1611847016584,"results":"105","hashOfConfig":"69"},{"size":4765,"mtime":1611851547876,"results":"106","hashOfConfig":"69"},{"size":2264,"mtime":1611847142398,"results":"107","hashOfConfig":"69"},{"size":442,"mtime":1611847016568,"results":"108","hashOfConfig":"69"},{"size":1309,"mtime":1611847016548,"results":"109","hashOfConfig":"69"},{"size":2257,"mtime":1611847142391,"results":"110","hashOfConfig":"69"},{"size":8399,"mtime":1611851505732,"results":"111","hashOfConfig":"69"},{"size":1949,"mtime":1611847142394,"results":"112","hashOfConfig":"69"},{"size":2154,"mtime":1611847142389,"results":"113","hashOfConfig":"69"},{"size":1578,"mtime":1611847142393,"results":"114","hashOfConfig":"69"},{"size":1123,"mtime":1611847016557,"results":"115","hashOfConfig":"69"},{"size":1505,"mtime":1611847016554,"results":"116","hashOfConfig":"69"},{"size":5031,"mtime":1611847016551,"results":"117","hashOfConfig":"69"},{"size":2177,"mtime":1611847016556,"results":"118","hashOfConfig":"69"},{"size":1834,"mtime":1611847016554,"results":"119","hashOfConfig":"69"},{"size":2420,"mtime":1611847016555,"results":"120","hashOfConfig":"69"},{"size":4620,"mtime":1611847142393,"results":"121","hashOfConfig":"69"},{"size":2021,"mtime":1611847016552,"results":"122","hashOfConfig":"69"},{"size":672,"mtime":1611847016580,"results":"123","hashOfConfig":"69"},{"size":502,"mtime":1611847016578,"results":"124","hashOfConfig":"69"},{"size":4746,"mtime":1611849760134,"results":"125","hashOfConfig":"69"},{"size":2630,"mtime":1611847016555,"results":"126","hashOfConfig":"69"},{"size":2140,"mtime":1611847016553,"results":"127","hashOfConfig":"69"},{"size":591,"mtime":1611847016547,"results":"128","hashOfConfig":"69"},{"size":3219,"mtime":1611847016571,"results":"129","hashOfConfig":"69"},{"size":1104,"mtime":1611847016587,"results":"130","hashOfConfig":"69"},{"size":1762,"mtime":1611847016570,"results":"131","hashOfConfig":"69"},{"size":954,"mtime":1611847016556,"results":"132","hashOfConfig":"69"},{"size":3244,"mtime":1611847016567,"results":"133","hashOfConfig":"69"},{"size":568,"mtime":1611847016569,"results":"134","hashOfConfig":"69"},{"size":884,"mtime":1611847016569,"results":"135","hashOfConfig":"69"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},"f6jkze",{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"138"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"138"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"138"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"138"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"138"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"138"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"138"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"138"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"138"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"138"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"138"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"138"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"138"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"138"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"227","messages":"228","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"138"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"138"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"138"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"138"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"138"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"138"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"138"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"138"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"138"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"138"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"138"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"138"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"138"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"138"},"C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\index.js",[],["299","300"],"C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\App.js",[],"C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Login-Register\\Signup.js",["301","302","303"],"import React, { useEffect, useState } from \"react\";\r\nimport SignupComponent from \"./SignupComponent\";\r\nimport StudentHome from \"../Student/pages/StudentHome\";\r\nimport firebase, { db } from \"../firebase\";\r\nimport AdminHome from \"../Admin/pages/AdminHome\";\r\n\r\n/**\r\n* Created by: Adam Marley\r\n* Handles all Signup, Sign In, and user details.\r\n* */\r\n\r\nexport default function Signup() {\r\n  const [user, setUser] = useState();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [emailError, setEmailError] = useState(\"\");\r\n  const [passError, setPassError] = useState(\"\");\r\n  const [hasAccount, setHasAccount] = useState(true);\r\n  const [adminPass, setAdminPass] = useState(\"\");\r\n  const [adminCheck, setAdminCheck] = useState(false);\r\n\r\n  const clearInputs = () => {\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n    setUsername(\"\");\r\n    setAdminPass(\"\");\r\n  };\r\n\r\n  const clearErrors = () => {\r\n    setEmailError(\"\");\r\n    setPassError(\"\");\r\n  };\r\n\r\n  const handleLogin = () => {\r\n    //resets errors before starting.\r\n    clearErrors();\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then((pull) => {\r\n        //gets the current user id, and uses it as a key to retrieve the rest of the user's details.\r\n        const usersId = firebase.auth().currentUser.uid;\r\n        db.collection(\"UserDetails\")\r\n          .doc(usersId)\r\n          .get()\r\n          .then((doc) => {\r\n            const adminCheck = doc.data().isAdmin;\r\n            console.log(\"IsAdmin Check: \", adminCheck);\r\n            console.log(\"UsersID: \", usersId);\r\n            //sets the admin boolean here so the system knows which home screen to direct to.\r\n            setAdminCheck(adminCheck);\r\n          });\r\n      })\r\n      .catch((err) => {\r\n        switch (err.code) {\r\n          case \"auth/invalid-email\":\r\n          case \"auth/user-disabled\":\r\n          case \"auth/user-not-found\":\r\n            setEmailError(err.message);\r\n            break;\r\n          case \"auth/wrong-password\":\r\n            setPassError(err.message);\r\n            break;\r\n        }\r\n      });\r\n  };\r\n\r\n  const handleSignup = () => {\r\n    //reset errors before starting.\r\n    const emailInput = email;\r\n    const usernameInput = username;\r\n    clearErrors();\r\n\r\n    let isAdminTrue = false;\r\n\r\n    let adminKey = \"\";\r\n    db.collection(\"Admin\")\r\n      .doc(\"AdminKey\")\r\n      .get()\r\n      .then((doc) => {\r\n        //get the current admin key in use, and compare it to the user's input. if it matches up, sign the user up as an admin.\r\n        adminKey = doc.data().currentKey.toString();\r\n\r\n        if (adminPass === adminKey) {\r\n          isAdminTrue = true;\r\n          setAdminCheck(true);\r\n        }\r\n\r\n        console.log(\"Is Admin Check: \", isAdminTrue);\r\n        firebase\r\n          .auth()\r\n          .createUserWithEmailAndPassword(email, password)\r\n          .then((pull) => {\r\n            //get the current user's id, and use it as the document path to store the rest of the user details in Firebase.\r\n            const usersId = firebase.auth().currentUser.uid;\r\n\r\n            console.log(\"Users ID\", usersId);\r\n            console.log(\"users Email\", email);\r\n            console.log(\"Username: \", username);\r\n\r\n            db.collection(\"UserDetails\")\r\n              .doc(usersId)\r\n              .set({\r\n                username: usernameInput,\r\n                email: emailInput,\r\n                isAdmin: isAdminTrue,\r\n              })\r\n              .then(function () {})\r\n              .catch(function (error) {\r\n                console.log(error);\r\n              });\r\n          })\r\n          .catch((err) => {\r\n            switch (err.code) {\r\n              case \"auth/email-already-in-use\":\r\n              case \"auth/invalid-email\":\r\n                setEmailError(err.message);\r\n                break;\r\n              case \"auth/weak-password\":\r\n                setPassError(err.message);\r\n                break;\r\n            }\r\n          });\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    //store the listener in the useEffect, so it can check for an authorisation state change every time a signin attempt is made.\r\n    console.log(\"use effect start\");\r\n    authListener();\r\n  }, []);\r\n\r\n  const authListener = () => {\r\n    console.log(\"auth listener\");\r\n    //if the user is successfully logged in, set user as the current firebase user object.\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n      if (user) {\r\n        setUser(user);\r\n\r\n        clearInputs();\r\n      } else {\r\n      }\r\n    });\r\n  };\r\n\r\n  //by default it shows the SignupComponent, aka the login screen. if the user exists and is an admin, go to AdminHome.\r\n  //if the user exists and isn't an admin, go to StudentHome.\r\n  return (\r\n    <div className=\"AppLogin\">\r\n      {user && adminCheck === false ? (\r\n        <StudentHome />\r\n      ) : user && adminCheck === true ? (\r\n        <AdminHome />\r\n      ) : (\r\n        <SignupComponent\r\n          email={email}\r\n          setEmail={setEmail}\r\n          password={password}\r\n          setPassword={setPassword}\r\n          handleLogin={handleLogin}\r\n          handleSignup={handleSignup}\r\n          hasAccount={hasAccount}\r\n          setHasAccount={setHasAccount}\r\n          emailError={emailError}\r\n          setEmailError={setEmailError}\r\n          passError={passError}\r\n          setPassError={setPassError}\r\n          adminPass={adminPass}\r\n          setAdminPass={setAdminPass}\r\n          username={username}\r\n          setUsername={setUsername}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Student\\pages\\StudentDeadlines.js",[],"C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Student\\pages\\StudentModules.js",[],"C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Student\\pages\\StudentHome.js",["304"],"import React from \"react\";\r\nimport StudentNavBar from \"../../Student/NavBar/StudentNavBar\";\r\nimport CSS from \"../../Student/css-files/HomePage.css\";\r\nimport { CardDeck } from \"react-bootstrap\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Welcome from \"../components/welcomeUser\";\r\n\r\n/**\r\n * Created by: Luke Waterhouse\r\n * This page makes use of React Bootstrap to show a deck of cards each with an image and a description of the feature they\r\n * represent.\r\n */\r\n\r\nclass StudentHome extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <StudentNavBar />\r\n        <Welcome />\r\n\r\n        <h1\r\n          className=\"text-md-center\"\r\n          style={{ marginTop: \"40px\", marginBottom: \"40px\" }}\r\n        >\r\n          <u>Home</u>\r\n        </h1>\r\n\r\n        <CardDeck\r\n          style={{\r\n            marginLeft: \"100px\",\r\n            marginRight: \"100px\",\r\n            marginBottom: \"100px\",\r\n          }}\r\n        >\r\n          <Card>\r\n            <Card.Body style={{ color: \"black\" }}>\r\n              <Card.Title style={{ color: \"black\" }}>Modules</Card.Title>\r\n              <Card.Img\r\n                variant=\"top\"\r\n                src=\"../../Pictures/Classes.jpg\"\r\n                style={{ marginBottom: \"20px\" }}\r\n              />\r\n              <Card.Text>\r\n                Head over here to view the details of each of your modules\r\n              </Card.Text>\r\n            </Card.Body>\r\n            <Card.Footer></Card.Footer>\r\n          </Card>\r\n\r\n          <Card>\r\n            <Card.Body style={{ color: \"black\" }}>\r\n              <Card.Title style={{ color: \"black\" }}>My Assignments</Card.Title>\r\n              <Card.Img\r\n                variant=\"top\"\r\n                src=\"../../Pictures/Assignments.png\"\r\n                style={{ marginBottom: \"20px\" }}\r\n              />\r\n              <Card.Text>\r\n                My Assignments will show you a breakdown of all the assignments\r\n                that your teacher has set you sorted into the different modules\r\n                they belong to, with the creation date, the due date and a way\r\n                to submit them\r\n              </Card.Text>\r\n            </Card.Body>\r\n            <Card.Footer>\r\n              <small className=\"text-muted\"> </small>\r\n            </Card.Footer>\r\n          </Card>\r\n          <Card>\r\n            <Card.Body style={{ color: \"black\" }}>\r\n              <Card.Title style={{ color: \"black\" }}>Analytics</Card.Title>\r\n              <Card.Img\r\n                variant=\"top\"\r\n                src=\"../../Pictures/Analytics.jpeg\"\r\n                style={{ marginBottom: \"20px\" }}\r\n              />\r\n              <Card.Text>\r\n                The Analytics section will give you a breakdown of the grades\r\n                you have achieved so far as well as the average marks for each\r\n                of the modules\r\n              </Card.Text>\r\n            </Card.Body>\r\n            <Card.Footer></Card.Footer>\r\n          </Card>\r\n        </CardDeck>\r\n\r\n        <CardDeck\r\n          style={{\r\n            marginLeft: \"100px\",\r\n            marginRight: \"100px\",\r\n            marginBottom: \"30px\",\r\n          }}\r\n        >\r\n          <Card>\r\n            <Card.Body style={{ color: \"black\" }}>\r\n              <Card.Title style={{ color: \"black\" }}>Feedback</Card.Title>\r\n              <Card.Img\r\n                variant=\"top\"\r\n                src=\"../../Pictures/Feedback.png\"\r\n                style={{ marginBottom: \"20px\" }}\r\n              />\r\n              <Card.Text>\r\n                The Feedback system will allow you to give feedback both in a\r\n                general way for each module as well as assignment specific, your\r\n                feedback will remain anonymous but please keep your feedback\r\n                respectful and if negative at least constructive.\r\n              </Card.Text>\r\n            </Card.Body>\r\n            <Card.Footer></Card.Footer>\r\n          </Card>\r\n          <Card>\r\n            <Card.Body style={{ color: \"black\" }}>\r\n              <Card.Title style={{ color: \"black\" }}>Forum</Card.Title>\r\n              <Card.Img\r\n                variant=\"top\"\r\n                src=\"../../Pictures/Forum.jpg\"\r\n                style={{ marginBottom: \"20px\" }}\r\n              />\r\n              <Card.Text>\r\n                The Forum is a great place to interact with both other Students\r\n                who may have many questions about different topics as well as\r\n                your teachers, If you have questions specific to a topic or a\r\n                module there may well be a thread for it already! If not be sure\r\n                to ask your teacher to create one\r\n              </Card.Text>\r\n            </Card.Body>\r\n            <Card.Footer></Card.Footer>\r\n          </Card>\r\n          <Card>\r\n            <Card.Body style={{ color: \"black\" }}>\r\n              <Card.Title style={{ color: \"black\" }}>\r\n                Deadline Tracker\r\n              </Card.Title>\r\n              <Card.Img\r\n                variant=\"top\"\r\n                src=\"../../Pictures/DeadlineTracker.jpg\"\r\n                style={{ marginBottom: \"20px\" }}\r\n              />\r\n              <Card.Text>\r\n                The Forum is a great place to interact with both other Students\r\n                who may have many questions about different topics as well as\r\n                your teachers, If you have questions specific to a topic or a\r\n                module there may well be a thread for it already! If not be sure\r\n                to ask your teacher to create one\r\n              </Card.Text>\r\n            </Card.Body>\r\n            <Card.Footer></Card.Footer>\r\n          </Card>\r\n        </CardDeck>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StudentHome;\r\n","C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Student\\pages\\StudentThreads.js",[],"C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Student\\pages\\StudentDiscussionBoard.js",[],"C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Student\\pages\\StudentAssignment.js",["305","306"],"import React, { useState, useEffect } from \"react\";\r\nimport StudentNavBar from \"../NavBar/StudentNavBar\";\r\nimport \"firebase/firestore\";\r\nimport StudentAssignmentModuleList from \"../components/StudentAssignmentModuleList\";\r\n\r\n/**\r\n * Created by: Giorgos Christodoulou\r\n * This is a page with a list of modules that when clicked will redirect\r\n * the user to each modules assignment list page.\r\n */\r\n\r\nclass StudentAssignment extends React.Component {\r\n  render() {\r\n      //Shows all active assignment as a list of cards.\r\n    return (\r\n      <div>\r\n        <StudentNavBar />\r\n        <h2>Assignments</h2>\r\n        <br />\r\n        <StudentAssignmentModuleList />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StudentAssignment;\r\n","C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Student\\pages\\GiveFeedbackModuleList.js",["307","308"],"import React, { useState, useEffect } from \"react\";\r\nimport StudentNavBar from \"../NavBar/StudentNavBar\";\r\nimport \"firebase/firestore\";\r\nimport StudentModuleList from \"../components/GiveFeedbackModuleListComp\";\r\n\r\n/**\r\n * Created by: Luke Waterhouse\r\n * This page shows a list of modules you can pick from as links so you can give feedback to each of them\r\n */\r\n\r\nfunction GiveFeedbackModuleList() {\r\n  return (\r\n    <div>\r\n      <StudentNavBar />\r\n      <StudentModuleList />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GiveFeedbackModuleList;\r\n","C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Student\\pages\\GiveFeedbackPage.js",[],"C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Student\\pages\\StudentResults.js",[],"C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Student\\pages\\StudentAssignmentView.js",["309","310"],"import React, { useState, useEffect } from \"react\";\r\nimport StudentNavBar from \"../NavBar/StudentNavBar\";\r\nimport \"firebase/firestore\";\r\nimport StudentAssignmentList from \"../components/StudentAssignmentList\";\r\nimport {Link} from \"react-router-dom\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\n/**\r\n * Created by: Giorgos Christodoulou\r\n * Displays the assignments of the previously selected module, as cards.\r\n */\r\n\r\nclass StudentAssignmentView extends React.Component{\r\n    render() {\r\n        //Takes the props from the url after the /, to pass them on.\r\n        console.log(this.props);\r\n        console.log(this.props.match.params);\r\n        const module = this.props.match.params.module;\r\n        return (//Displays the assignments in a module as cards.\r\n            <div>\r\n                <StudentNavBar/>\r\n                <h2>Assignments</h2>\r\n                <div style={{paddingLeft:\"20px\",paddingTop:\"30px\"}}>\r\n                    <Link to=\"/StudentAssignment\">\r\n                        <Button variant=\"secondary\" style={{backgroundColor:\"#1A1A1B\"}}>\r\n                            Back to Assignments\r\n                        </Button>\r\n                    </Link>\r\n                </div>\r\n                <br/>\r\n                <StudentAssignmentList module={module}/>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default StudentAssignmentView;","C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Student\\pages\\StudentAssignmentDetails.js",[],"C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Admin\\pages\\AdminAnalytics.js",[],"C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Admin\\pages\\AdminHome.js",["311"],"import React from \"react\";\r\nimport AdminNavBar from \"../NavBar/AdminNavBar\";\r\nimport \"../css-files/AdminHome.css\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport { CardDeck, CardGroup } from \"react-bootstrap\";\r\nimport Welcome from \"../../Student/components/welcomeUser\";\r\n\r\n/**\r\n * Created by: Luke Waterhouse\r\n * The Admin Home page makes use of React bootstrap to display a deck of cards each with a picture imported from public and\r\n * a description of one of the features\r\n */\r\n\r\nclass AdminHome extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <AdminNavBar />\r\n        <Welcome />\r\n\r\n        <h1\r\n          className=\"text-md-center\"\r\n          style={{ marginBottom: \"40px\", marginTop: \"40px\" }}\r\n        >\r\n          <u>Home</u>\r\n        </h1>\r\n\r\n        <CardDeck\r\n          style={{\r\n            marginLeft: \"100px\",\r\n            marginRight: \"100px\",\r\n            marginBottom: \"100px\",\r\n          }}\r\n        >\r\n          <Card>\r\n            <Card.Body style={{ color: \"black\" }}>\r\n              <Card.Title style={{ color: \"black\" }}>My Classes</Card.Title>\r\n              <Card.Img\r\n                variant=\"top\"\r\n                src=\"../../Pictures/Classes.jpg\"\r\n                style={{ marginBottom: \"20px\" }}\r\n              />\r\n              <Card.Text>\r\n                My Classes will show you all the different modules on your\r\n                course\r\n              </Card.Text>\r\n            </Card.Body>\r\n            <Card.Footer></Card.Footer>\r\n          </Card>\r\n\r\n          <Card>\r\n            <Card.Body style={{ color: \"black\" }}>\r\n              <Card.Title style={{ color: \"black\" }}>My Assignments</Card.Title>\r\n              <Card.Img\r\n                variant=\"top\"\r\n                src=\"../../Pictures/Assignments.png\"\r\n                style={{ marginBottom: \"20px\" }}\r\n              />\r\n              <Card.Text>\r\n                Heading to My Assignments will show you all of the assignments\r\n                for each module and enable you to create assignments for them so\r\n                your Students can get busy! Set the title, module, marks and\r\n                instructions for the assignment which will all be easy to view\r\n                for your students.\r\n              </Card.Text>\r\n            </Card.Body>\r\n            <Card.Footer>\r\n              <small className=\"text-muted\"> </small>\r\n            </Card.Footer>\r\n          </Card>\r\n          <Card>\r\n            <Card.Body style={{ color: \"black\" }}>\r\n              <Card.Title style={{ color: \"black\" }}>Analytics</Card.Title>\r\n              <Card.Img\r\n                variant=\"top\"\r\n                src=\"../../Pictures/Analytics.jpeg\"\r\n                style={{ marginBottom: \"20px\" }}\r\n              />\r\n              <Card.Text>\r\n                The Analytics section will give you overviews of the Grades that\r\n                your students have achieved in different ways\r\n              </Card.Text>\r\n            </Card.Body>\r\n            <Card.Footer></Card.Footer>\r\n          </Card>\r\n        </CardDeck>\r\n\r\n        <CardDeck\r\n          style={{\r\n            marginLeft: \"100px\",\r\n            marginRight: \"100px\",\r\n            marginBottom: \"30px\",\r\n          }}\r\n        >\r\n          <Card>\r\n            <Card.Body style={{ color: \"black\" }}>\r\n              <Card.Title style={{ color: \"black\" }}>Feedback</Card.Title>\r\n              <Card.Img\r\n                variant=\"top\"\r\n                src=\"../../Pictures/Feedback.png\"\r\n                style={{ marginBottom: \"20px\" }}\r\n              />\r\n              <Card.Text>\r\n                The Feedback System works from both ends, the feedback you see\r\n                from your students is anonymous and given by students for\r\n                modules in General and the Assignments in each of them\r\n                specifically so you can take this on board when teaching in the\r\n                future\r\n              </Card.Text>\r\n            </Card.Body>\r\n            <Card.Footer></Card.Footer>\r\n          </Card>\r\n          <Card>\r\n            <Card.Body style={{ color: \"black\" }}>\r\n              <Card.Title style={{ color: \"black\" }}>Forum</Card.Title>\r\n              <Card.Img\r\n                variant=\"top\"\r\n                src=\"../../Pictures/Forum.jpg\"\r\n                style={{ marginBottom: \"20px\" }}\r\n              />\r\n              <Card.Text>\r\n                The Forum is a great place to interact with your Students who\r\n                may have many questions about different topics, in order to\r\n                organize this you have the ability to both create and delete\r\n                different threads that are suitable for the topics of your\r\n                classes or maybe something more abstract or general\r\n              </Card.Text>\r\n            </Card.Body>\r\n            <Card.Footer></Card.Footer>\r\n          </Card>\r\n        </CardDeck>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AdminHome;\r\n","C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Admin\\pages\\AdminDiscussionBoard.js",[],"C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Admin\\pages\\AdminClasses.js",[],"C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Admin\\pages\\ViewFeedbackPage.js",[],"C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Admin\\pages\\ViewFeedbackModuleList.js",["312","313","314"],"import React from \"react\";\r\nimport AdminNavBar from \"../NavBar/AdminNavBar\";\r\nimport { db } from \"../../firebase\";\r\nimport { useCollectionData } from \"react-firebase-hooks/firestore\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ModuleThreads from \"../components/ModuleThreadsListComp\";\r\n\r\n/**\r\n * Created by: Luke Waterhouse\r\n * This page shows you the different modules that you can go into to view the different threads of feedback for them\r\n */\r\n\r\nexport default function ViewFeedbackModuleList() {\r\n  return (\r\n    <div>\r\n      <AdminNavBar />\r\n      <ModuleThreads />\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Admin\\pages\\AdminThreads.js",[],"C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Admin\\pages\\AdminAssignments.js",[],"C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Admin\\pages\\AssignmentDetails.js",[],"C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Admin\\pages\\ViewAssignments.js",["315"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AdminAssignments from \"./AdminAssignments\";\r\nimport AdminNavBar from \"../NavBar/AdminNavBar\";\r\nimport AssignmentsListed from \"../components/AssignmentsListed\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\n/**\r\n * Created by: Giorgos Christodoulou\r\n * Displays all the assignments in the previously selected module, as a list of cards.\r\n */\r\n\r\nexport default class ViewAssignments extends React.Component {\r\n  render() {\r\n      //Takes the props from the url after the /, to pass them on.\r\n    console.log(this.props);\r\n    console.log(this.props.match.params);\r\n    const input = this.props.match.params.module;\r\n    return ( //Lists all the assignments in a module.\r\n      <div>\r\n        <AdminNavBar />\r\n        <div style={{ paddingLeft: \"20px\", paddingTop: \"30px\" }}>\r\n          <Link to=\"/AdminAssignments\">\r\n            <Button variant=\"secondary\" style={{ backgroundColor: \"#1A1A1B\" }}>\r\n              Back to Assignment page\r\n            </Button>\r\n          </Link>\r\n        </div>\r\n        <br />\r\n\r\n        <div className=\"col s12 m6 l6\" style={{ backgroundColor: \"#1A1A1B\" }}>\r\n          <AssignmentsListed input={input} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\firebase.js",[],"C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Login-Register\\SignupComponent.js",[],"C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Student\\components\\welcomeUser.js",["316"],"import React, { useEffect, useState } from \"react\";\r\nimport { db } from \"../../firebase\";\r\nimport firebase from \"firebase\";\r\nimport Card from \"react-bootstrap/Card\";\r\n\r\n/**\r\n * Created by: Luke Waterhouse\r\n * This file contains functionality to display a welcome message for the currently logged in user\r\n */\r\n\r\n//pulls the username and sets it to state\r\nexport default function Welcome() {\r\n  const [userName, setUsername] = useState(\"\");\r\n\r\n  let userID = \"\";\r\n\r\n  //first checks if there is an authState change before retrieving the current users details\r\n  firebase.auth().onAuthStateChanged(function (user) {\r\n    if (user) {\r\n      getUserID().then((r) => {\r\n        db.collection(\"UserDetails\")\r\n          .doc(userID)\r\n          .get()\r\n          .then((doc) => {\r\n            const username = doc.data().username;\r\n            setUsername(username);\r\n          });\r\n      });\r\n    } else {\r\n      console.log(\"DATABASE ERROR\");\r\n    }\r\n  });\r\n\r\n  async function getUserID() {\r\n    userID = firebase.auth().currentUser.uid;\r\n    console.log(\"ID:\", userID);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Card style={{ background: \"#424242\" }}>\r\n        <h3 style={{ color: \"white\" }}>Welcome {userName}!</h3>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Student\\NavBar\\StudentNavBar.js",["317"],"import React, { Component } from \"react\";\r\nimport \"./StudentNavBar.css\";\r\nimport MenuItems from \"./StudentMenuItems\";\r\nimport Logo from \"../../Images/WolfPack.png\";\r\nimport Logout from \"../../Login-Register/Logout\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\n/**\r\n * Created by: Luke Waterhouse\r\n * CSS: Harry Clifford\r\n * This file contains the navigation bar component for the student side which can be imported into any of the student pages\r\n * it maps through the object in Student Menu items and displays them as links going to the corresponding url found in each\r\n * object\r\n */\r\nclass StudentNavBar extends Component {\r\n  state = { clicked: false };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <nav className=\"NavbarItems\">\r\n          <div className=\"menu-icon\">\r\n            <img src={Logo} />\r\n          </div>\r\n          <ul>\r\n            {MenuItems.map((item, index) => {\r\n              return (\r\n                <li className=\"navBarList\" key={index}>\r\n                  <a className={item.cName} href={item.url}>\r\n                    {item.title}\r\n                  </a>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n\r\n          <a onClick={Logout} href=\"/\" style={{ marginBottom: \"12px\" }}>\r\n            <Button style={{marginRight: \"12px\"}}>Logout</Button>\r\n          </a>\r\n        </nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StudentNavBar;\r\n","C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Student\\components\\DeadlinesFetch.js",["318"],"import React, { useEffect, useState } from \"react\";\r\nimport { db } from \"../../firebase\";\r\nimport Card from \"react-bootstrap/Card\";\r\n\r\n/**\r\n * Created by: Luke Waterhouse\r\n * This file contains a component which fetches the different assignments from all the modules using a for loop. These are\r\n * then displayed as cards showing the Title, due date and the module they belong to.\r\n */\r\n\r\nexport default function DisplayDeadlines() {\r\n  const [Assignments, setAssignments] = useState([]);\r\n  const modules = [];\r\n  const AssignmentsToSet = [];\r\n\r\n  //this useEffect pulls a list of all the different module titles so they can be used in a for loop to get the assignments\r\n  //for each module and sets them to the modules array.\r\n  useEffect(() => {\r\n    function returnAssignments() {\r\n      db.collection(\"Courses\")\r\n        .doc(\"Computer Science\")\r\n        .collection(\"modules\")\r\n        .get()\r\n        .then((snapshot) => {\r\n          snapshot.forEach((doc) => {\r\n            const data = doc.data();\r\n            modules.push(data.Title);\r\n          });\r\n          getAssignments();\r\n        })\r\n        .catch((error) => console.log(error));\r\n    }\r\n\r\n    //this function uses the modules array created above to loop through the module titles and extracts the assignments\r\n    //from each one using the module title as the doc path. Then sets the assignments to a useState (Assignments)\r\n    function getAssignments() {\r\n      for (let i = 0; i < modules.length; i++) {\r\n        db.collection(\"Courses\")\r\n          .doc(\"Computer Science\")\r\n          .collection(\"modules\")\r\n          .doc(modules[i])\r\n          .collection(\"Assignments\")\r\n          .get()\r\n          .then((snapshot) => {\r\n            snapshot.forEach((doc) => {\r\n              let output = \"error\";\r\n              if (snapshot.size > 0) {\r\n                const data = doc.data();\r\n\r\n                //checks if a deadline exists before adding it\r\n\r\n                if (data.Deadline) {\r\n                  const toDate = data.Deadline && data.Deadline.toDate();\r\n                  const month = toDate.getUTCMonth() + 1;\r\n                  const day = toDate.getUTCDate();\r\n                  const year = toDate.getUTCFullYear();\r\n                  const time =\r\n                    toDate.getUTCHours() + \":\" + toDate.getUTCMinutes();\r\n                  output = year + \"/\" + month + \"/\" + day + \" \" + time;\r\n                }\r\n\r\n                //adds the assignment to a temporary array\r\n\r\n                AssignmentsToSet.push({\r\n                  Title: data.Title,\r\n                  Marks: data.Marks,\r\n                  Module: data.Module,\r\n                  DueDate: output,\r\n                });\r\n                console.log(AssignmentsToSet);\r\n              } else {\r\n              }\r\n            });\r\n\r\n            //on the last loop sets the Assignment useState using the temporary array\r\n            if (i === modules.length - 1) {\r\n              setAssignments(AssignmentsToSet);\r\n            }\r\n          });\r\n      }\r\n    }\r\n\r\n    returnAssignments();\r\n  }, []);\r\n\r\n  //takes in props from assignments and displays them in a bootstrap Card\r\n  function DeadlinePost(props) {\r\n    console.log(props.Title);\r\n    return (\r\n      <Card style={{ width: \"30rem\", marginLeft: \"20px\", marginTop: \"20px\" }}>\r\n        <Card.Body style={{ backgroundColor: \"#424242\" }}>\r\n          <Card.Title>\r\n            <h5 style={{ color: \"white\", marginBottom: \"30px\" }}>\r\n              <u>{props.Title}</u>\r\n            </h5>\r\n          </Card.Title>\r\n\r\n          <div style={{ color: \"#f9f9f9\" }}>\r\n            <b>Due Date:</b> {props.Date}\r\n            <br />\r\n            <b>Module:</b> {props.Module}\r\n          </div>\r\n        </Card.Body>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {Assignments.map((assignmentRef) => (\r\n        <DeadlinePost\r\n          Title={assignmentRef.Title}\r\n          Module={assignmentRef.Module}\r\n          Date={assignmentRef.DueDate.toString()}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Student\\components\\StudentAssignmentModuleList.js",["319"],"import React from \"react\";\r\nimport { db } from \"../../firebase\";\r\nimport { useCollectionData } from \"react-firebase-hooks/firestore\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\n/**\r\n * Created by: Giorgos Christodoulou\r\n * This file contains a function in which all modules are taken from the firebase and put in an array,\r\n * which is then looped to display the module titles as a list of buttons.\r\n * When one is clicked, the user will be redirected to the modules assignment list page.\r\n */\r\n\r\nfunction StudentAssignmentModuleList() {\r\n  //Create a list of all modules\r\n  const ModuleRef = db\r\n    .collection(\"Courses\")\r\n    .doc(\"Computer Science\")\r\n    .collection(\"modules\");\r\n  const [Module] = useCollectionData(ModuleRef, { idField: \"Title\" });\r\n  console.log(Module);\r\n\r\n  //Display the Modules as links.\r\n  return (\r\n    <div>\r\n      <h1>View Your Assignments</h1>\r\n      {Module?.map((module) => (\r\n        <Modules key={module.Title} ModuleTitle={module} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\n//Creates the reference and link for the module to redirect to another page.\r\nfunction Modules({ ModuleTitle }) {\r\n  const { Title } = ModuleTitle;\r\n  const pathTitle = \"/StudentAssignmentView/\" + Title;\r\n  return (\r\n    <div\r\n      className=\"card-header border-white border-top text-md-center\"\r\n      style={{ borderBlockColor: \"#424242\" }}\r\n    >\r\n      <a className=\"text-warning\">\r\n        <Button variant=\"secondary\" style={{ background: \"#424242\" }}>\r\n          <Link style={{ color: \"white\" }} to={pathTitle}>\r\n            {Title}\r\n          </Link>\r\n        </Button>\r\n      </a>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StudentAssignmentModuleList;\r\n","C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Student\\components\\DiscussionBoard.js",[],"C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Student\\components\\StudentThreadsList.js",[],"C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Student\\components\\StudentAssignmentList.js",["320"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { db } from \"../../firebase\";\r\nimport moment from \"moment\";\r\nimport { useCollectionData } from \"react-firebase-hooks/firestore\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport { CardColumns } from \"react-bootstrap\";\r\n\r\n/**\r\n * Created by: Giorgos Christodoulou\r\n * This file contains a function which fetches all assignments into an array, and loops through all of them,\r\n * while displpaying their Title, deadline, creator and date created in a card.\r\n * When one of the cards is clicked, the user will be redirected to the selected assignments details page.\r\n */\r\n\r\nfunction AssignmentsListed(props) {\r\n  const AssRef = db\r\n    .collection(\"Courses\")\r\n    .doc(\"Computer Science\")\r\n    .collection(\"modules\")\r\n    .doc(props.module)\r\n    .collection(\"Assignments\");\r\n  const query = AssRef.orderBy(\"createdAt\");\r\n  const [assignment] = useCollectionData(query, { idField: \"id\" });\r\n  console.log(assignment);\r\n\r\n  return (\r\n    <div className=\"Assignments\">\r\n      {assignment &&\r\n        assignment.map((assignment) => {\r\n          if (assignment.Deadline > new Date().getDate() || !assignment.Graded) { //Splits up assignments into finished ones and pending ones.\r\n            return (\r\n                <div>\r\n                  <CardColumns>\r\n                    <Link\r\n                        to={\r\n                          \"/StudentAssignmentDetails/\" +\r\n                          props.module +\r\n                          \"/\" +\r\n                          assignment.id\r\n                        }\r\n                        key={assignment.id}\r\n                    >\r\n                      <Card\r\n                          bg={\"Secondary\".toLowerCase()}\r\n                          text={\r\n                            \"Secondary\".toLowerCase() === \"light\" ? \"dark\" : \"white\"\r\n                          }\r\n                          style={{width: \"18rem\"}}\r\n                          className=\"card-header border-white border-top\"\r\n                      >\r\n                        <Card.Header>{assignment.Module}</Card.Header>\r\n                        <Card.Body>\r\n                          <Card.Title>{assignment.Title}</Card.Title>\r\n                          <Card.Text>\r\n                            <p>Posted by {assignment.createdBy}</p>\r\n                          </Card.Text>\r\n                          <Card.Text>\r\n                            <small className=\"text-muted text-black-50\">\r\n                              Created{\" \"}\r\n                              {moment(assignment.createdAt.toDate()).calendar()}\r\n                            </small>\r\n                          </Card.Text>\r\n                        </Card.Body>\r\n                      </Card>\r\n                    </Link>\r\n                  </CardColumns>\r\n                </div>\r\n            );\r\n          }else {\r\n            return; //Doesn't show any assignments that are not pending.\r\n          }\r\n        })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AssignmentsListed;\r\n","C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Student\\components\\GiveFeedbackModuleListComp.js",[],"C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Student\\components\\GiveGeneralFeedback.js",[],"C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Student\\components\\StudentModuleGroup.js",[],"C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Student\\components\\GiveFeedbackPageComp.js",["321"],"import React, { useState, useEffect } from \"react\";\r\nimport { db } from \"../../firebase\";\r\nimport \"firebase/firestore\";\r\nimport firebase from \"firebase\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\n/**\r\n * Created by: Luke Waterhouse\r\n * this file contains functionality to select any assignment from the selected module using a dropdown menu and send feedback\r\n * to the database for it\r\n */\r\nfunction GiveAssignmentFeedback(props) {\r\n  const [formValue, setFormValue] = useState(\"\");\r\n  const [assignmentList, setAssignmentList] = useState([]);\r\n  const [selectedAssignment, setSelectedAssignment] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n  //this useEffect pulls the assignments of a particular module depending on the prop passed in and pushes it to an array.\r\n  //it then sets this as a useState and sets the initially selected assignment as the first one in the array.\r\n\r\n  useEffect(() => {\r\n    db.collection(\"Courses\")\r\n      .doc(\"Computer Science\")\r\n      .collection(\"modules\")\r\n      .doc(props.input)\r\n      .collection(\"Assignments\")\r\n      .get()\r\n      .then((snapshot) => {\r\n        const assignments = [];\r\n        snapshot.forEach((doc) => {\r\n          const data = doc.data();\r\n          assignments.push(data);\r\n        });\r\n        setAssignmentList(assignments);\r\n        setSelectedAssignment(assignments[0].Title.toString());\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }, []);\r\n\r\n  //this async function first checks if the user has inputted text, if true it takes the selected assignment and adds some feedback\r\n  //to it in the database\r\n\r\n  const sendFeedback = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (formValue === \"\") {\r\n      setErrorMessage(\"Please input some text before submitting!\");\r\n    } else {\r\n      setErrorMessage(\r\n        \"Success! Don't worry, your feedback will be kept anonymous\"\r\n      );\r\n      setFormValue(\"\");\r\n      const feedbackRef = db\r\n        .collection(\"Courses\")\r\n        .doc(\"Computer Science\")\r\n        .collection(\"modules\")\r\n        .doc(props.input)\r\n        .collection(\"Assignments\")\r\n        .doc(selectedAssignment)\r\n        .collection(\"feedback\");\r\n      await feedbackRef.add({\r\n        text: formValue,\r\n        createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n      });\r\n    }\r\n  };\r\n\r\n  //returns a dropdown menu which dynamically changes with whatever assignments are in the module selected.\r\n  //you may then select one and send feedback for it.\r\n  return (\r\n    <div className=\"text-dark\">\r\n      <h5 style={{ marginTop: \"10px\" }} className=\"text-md-center\">\r\n        Assignment Feedback\r\n      </h5>\r\n      <form>\r\n        <select\r\n          style={{ marginBottom: \"10px\", marginLeft: \"15px\" }}\r\n          value={selectedAssignment}\r\n          onChange={(e) => setSelectedAssignment(e.currentTarget.value)}\r\n        >\r\n          {assignmentList &&\r\n            assignmentList.map((module) => (\r\n              <option key={module.Title} value={module.Title}>\r\n                {module.Title}\r\n              </option>\r\n            ))}\r\n\r\n          <input type=\"submit\" value=\"Submit\" />\r\n        </select>\r\n      </form>\r\n\r\n      <form onSubmit={sendFeedback}>\r\n        <textarea\r\n          style={{ width: \"640px\", marginLeft: \"15px\" }}\r\n          value={formValue}\r\n          onChange={(e) => setFormValue(e.target.value)}\r\n        />\r\n        <div style={{ marginLeft: \"15px\" }} className=\"text-dark\">\r\n          {errorMessage}\r\n        </div>\r\n\r\n        <Button\r\n          style={{ marginLeft: \"15px\" }}\r\n          type=\"submit\"\r\n          className=\"btn-success\"\r\n        >\r\n          Send\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GiveAssignmentFeedback;\r\n","C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Student\\components\\AssignmentSubmit.js",["322"],"C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Student\\components\\StudentAssignmentDetailsComp.js",["323","324","325"],"import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport { db } from \"../../firebase\";\r\nimport { useDocumentData } from \"react-firebase-hooks/firestore\";\r\nimport Card from \"react-bootstrap/Card\";\r\n\r\n/**\r\n * Created by: Giorgos Christodoulou\r\n * This file contains a component which fetches the selected assignments fields from the firebase\r\n * and displays them as details in a card.\r\n */\r\n\r\nconst StudentAssignmentDetailsComp = (props) => {\r\n\r\n  //Checking the values in props are as desired.\r\n  console.log(props);\r\n\r\n  //Creates an Object list from the current assignments document data in the firebase\r\n  const AssignRef = db\r\n    .collection(\"Courses\")\r\n    .doc(\"Computer Science\")\r\n    .collection(\"modules\")\r\n    .doc(props.module)\r\n    .collection(\"Assignments\")\r\n    .doc(props.input);\r\n  const [ass] = useDocumentData(AssignRef);\r\n  console.log(ass);\r\n\r\n  if (ass) {//Checks if an assignment exists and proceeds to display a card with its information.\r\n    return (\r\n      <div>\r\n        <div className=\"card-header border-white border-top\">\r\n          <div>\r\n            <Card\r\n              bg={\"Info\".toLowerCase()}\r\n              text={\"Info\".toLowerCase() === \"light\" ? \"dark\" : \"white\"}\r\n            >\r\n              <Card.Body>\r\n                <Card.Text>\r\n                  <h4>{ass.Title}</h4>\r\n                  <br />\r\n                  <p>{ass.Instructions}</p>\r\n                  <p>Module: {ass.Module}</p>\r\n                  <p>Marks: {ass.Marks}</p>\r\n                  <p>Deadline: {moment(ass.Deadline.toDate()).calendar()}</p>\r\n                  <div className=\"text-black-50\">Posted by Someone</div>\r\n                  <div className=\"text-black-50\">\r\n                    {moment(ass.createdAt.toDate()).calendar()}\r\n                  </div>\r\n                </Card.Text>\r\n              </Card.Body>\r\n            </Card>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return ( //If assignment doesnt exist, displays this.\r\n      <div className=\"container center\">\r\n        <p>Loading project...</p>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default StudentAssignmentDetailsComp;\r\n","C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\DataAnalysis\\Graph.js",[],"C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Admin\\NavBar\\AdminNavBar.js",["326"],"import React, { Component } from \"react\";\r\nimport MenuItems from \"./AdminMenuItems\";\r\nimport \"./AdminNavBar.css\";\r\nimport Logo from \"../../Images/WolfPack.png\";\r\nimport Logout from \"../../Login-Register/Logout\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\n/**\r\n * Created by: Luke Waterhouse\r\n * CSS: Harry Clifford\r\n * This file contains the navigation bar component for the student side which can be imported into any of the student pages\r\n * it maps through the object in Student Menu items and displays them as links going to the corresponding url found in each\r\n * object\r\n */\r\n\r\nclass AdminNavBar extends Component {\r\n  state = { clicked: false };\r\n\r\n  render() {\r\n    return (\r\n      <nav className=\"NavbarItems\">\r\n        <div className=\"menu-icon\">\r\n          <img src={Logo} />\r\n        </div>\r\n        <ul>\r\n          {MenuItems.map((item, index) => {\r\n            return (\r\n              <li className=\"navBarList\" key={index}>\r\n                <a className={item.cName} href={item.url}>\r\n                  {item.title}\r\n                </a>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n        <a onClick={Logout} href=\"/\" style={{ marginBottom: \"12px\" }}>\r\n          <Button>Logout</Button>\r\n        </a>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AdminNavBar;\r\n","C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Admin\\components\\AssignmentDetailsPage.js",["327","328","329"],"import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport { db } from \"../../firebase\";\r\nimport { useDocumentData } from \"react-firebase-hooks/firestore\";\r\nimport Card from \"react-bootstrap/Card\";\r\n\r\n/**\r\n * Created by: Giorgos Christodoulou\r\n * This file contains a component which fetches the selected assignments fields from the firebase\r\n * and displays them as details in a card.\r\n */\r\n\r\nconst AssignmentDetailsPage = (props) => {\r\n\r\n  //Checking the values in props are as desired.\r\n  console.log(props);\r\n\r\n  //Creates an Object list from the current assignments document data in the firebase\r\n  const AssignRef = db\r\n    .collection(\"Courses\")\r\n    .doc(\"Computer Science\")\r\n    .collection(\"modules\")\r\n    .doc(props.module)\r\n    .collection(\"Assignments\")\r\n    .doc(props.input);\r\n  const [ass] = useDocumentData(AssignRef);\r\n  console.log(ass);\r\n\r\n  if (ass) {\r\n    return (//Checks if an assignment exists and proceeds to display a card with its information.\r\n      <div>\r\n        <div className=\"card-header border-white border-top\">\r\n          <div>\r\n            <Card\r\n              bg={\"Info\".toLowerCase()}\r\n              text={\"Info\".toLowerCase() === \"light\" ? \"dark\" : \"white\"}\r\n            >\r\n              <Card.Body>\r\n                <Card.Text>\r\n                  <h4>{ass.Title}</h4>\r\n                  <br />\r\n                  <p>{ass.Instructions}</p>\r\n                  <p>Module: {ass.Module}</p>\r\n                  <p>Marks: {ass.Marks}</p>\r\n                  <p>Deadline: {moment(ass.Deadline.toDate()).calendar()}</p>\r\n                  <div className=\"text-black-50\">Posted by {ass.createdBy}</div>\r\n                  <div className=\"text-black-50\">\r\n                    {moment(ass.createdAt.toDate()).calendar()}\r\n                  </div>\r\n                </Card.Text>\r\n              </Card.Body>\r\n            </Card>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (//If assignment doesnt exist, displays this.\r\n      <div className=\"container center\">\r\n        <p>Loading project...</p>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default AssignmentDetailsPage;\r\n","C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Admin\\components\\AssignmentForm.js",["330","331"],"C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Admin\\components\\FinishedGrading.js",[],"C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Admin\\components\\AdminGetSubmissions.js",["332","333"],"import React, {useEffect} from 'react'\r\nimport {db} from \"../../firebase\";\r\nimport {useDocumentData} from \"react-firebase-hooks/firestore\";\r\nimport AdminSubmissionDisplay from \"./AdminSubmissionDisplay\";\r\n\r\n/**\r\n * Created by: Giorgos Christodoulou\r\n * This file contains a component which fetches the user submissions from the firebase submissions collection,\r\n * and loops through them to display each one in a list.\r\n */\r\n\r\nconst AdminGetSubmissions = (props) =>{\r\n\r\n    //Checking the values in props are as desired.\r\n    console.log(props);\r\n\r\n    const [subs, setSubs] = React.useState([]);\r\n\r\n    //Creates an Object list from the current assignments document data in the firebase\r\n    const AssignRef = db.collection(\"Courses\")\r\n        .doc(\"Computer Science\")\r\n        .collection(\"modules\")\r\n        .doc(props.module)\r\n        .collection(\"Assignments\")\r\n        .doc(props.input)\r\n    const [ ass ] = useDocumentData(AssignRef);\r\n\r\n    //Creates a mapped list of all the submissions for an assignment.\r\n    useEffect(() => { const fetchsubs = async () => {\r\n        //Gets a reference for the collection\r\n        const SubRef = await db.collection(\"Courses\")\r\n            .doc(\"Computer Science\")\r\n            .collection(\"modules\")\r\n            .doc(props.module)\r\n            .collection(\"Assignments\")\r\n            .doc(props.input)\r\n            .collection(\"Submissions\").get();\r\n        //Adds all the submissions in a list.\r\n        setSubs(\r\n            SubRef.docs.map((doc) => {\r\n                return doc.data();\r\n            })\r\n        );\r\n    }; fetchsubs();\r\n    },[]);\r\n\r\n\r\n        return(\r\n            <div>\r\n                <ul>\r\n                { subs.map(submission => { //Displays the submissions.\r\n                    return(\r\n                        <div>\r\n                            <li>\r\n                                <AdminSubmissionDisplay key={submission.id} submission={submission} props={props}/>\r\n                            </li>\r\n                        </div>\r\n                    )\r\n                })}\r\n                </ul>\r\n            </div>\r\n        );\r\n\r\n}\r\n\r\n\r\nexport default AdminGetSubmissions;","C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Admin\\components\\Assignments.js",["334"],"import React from \"react\";\r\nimport { db } from \"../../firebase\";\r\nimport { useCollectionData } from \"react-firebase-hooks/firestore\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\n/**\r\n * Created by: Giorgos Christodoulou\r\n * This file contains a function in which all modules are taken from the firebase and put in an array,\r\n * which is then looped to display the module titles as a list of buttons.\r\n * When one is clicked, the user will be redirected to the modules assignment list page.\r\n */\r\n\r\nfunction Assignments() {\r\n  const ModuleRef = db\r\n    .collection(\"Courses\")\r\n    .doc(\"Computer Science\")\r\n    .collection(\"modules\");\r\n  const [Module] = useCollectionData(ModuleRef, { idField: \"Title\" });\r\n  console.log(Module);\r\n\r\n  return (\r\n    <div>\r\n      <h1>View Assignments</h1>\r\n      {Module?.map((module) => (\r\n        <Modules key={module.Title} ModuleTitle={module} /> //Creates a link to the assignment list page of a module.\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Modules({ ModuleTitle }) {\r\n  const { Title } = ModuleTitle;\r\n  const pathTitle = \"/ViewAssignments/\" + Title;\r\n  return (\r\n    <div\r\n      className=\"card-header border-white border-top text-md-center\"\r\n      style={{ borderBlockColor: \"#424242\" }}\r\n    >\r\n      <a className=\"text-warning\">\r\n        <Button variant=\"secondary\" style={{ background: \"#424242\" }}>\r\n          <Link style={{ color: \"white\" }} to={pathTitle}>\r\n            {Title}\r\n          </Link>\r\n        </Button>\r\n      </a>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Assignments;\r\n","C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Admin\\components\\deleteThread.js",[],"C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Admin\\components\\Threads.js",["335"],"import React from \"react\";\r\nimport { db } from \"../../firebase\";\r\nimport { useCollectionData } from \"react-firebase-hooks/firestore\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\n/**\r\n * Created by: Luke Waterhouse\r\n * This file pulls the Threads collection from the database and maps through them passing each one to a Thread\r\n * component which displays its name as clickable links to take you to the different thread pages (using router variables)\r\n */\r\n\r\n//this function pulls all the Threads from the database and\r\nfunction Threads() {\r\n  const ThreadsRef = db\r\n    .collection(\"Courses\")\r\n    .doc(\"Computer Science\")\r\n    .collection(\"Threads\");\r\n  const [Threads] = useCollectionData(ThreadsRef, { idField: \"id\" });\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"text-sm-center\">Threads</h1>\r\n      {Threads?.map((thread) => (\r\n        <Thread key={thread.id} ThreadTitle={thread} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Thread({ ThreadTitle }) {\r\n  const { Title } = ThreadTitle;\r\n  const pathTitle = \"/AdminDiscussion/\" + Title;\r\n  return (\r\n    <div className=\"card-header border-white border-top text-md-center\">\r\n      <a className=\"text-warning\">\r\n        <h5>\r\n          <Button variant=\"secondary\" style={{ background: \"#424242\" }}>\r\n            <Link style={{ color: \"white\" }} to={pathTitle}>\r\n              {Title}\r\n            </Link>\r\n          </Button>\r\n        </h5>\r\n      </a>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Threads;\r\n","C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Admin\\components\\AssignmentList.js",["336"],"import React, { useEffect, useState } from \"react\";\r\nimport { db } from \"../../firebase\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\n/**\r\n * Created by: Luke Waterhouse\r\n * This file contains a component which takes the module name passed into it as a prop, and then provides a dropdown\r\n * menu to select the different assignments for that module and displays them in cards.\r\n */\r\n\r\nexport default function AssignmentList(props) {\r\n  const [AssignmentList, setAssignmentList] = useState([]);\r\n  const [selectedAssignment, setSelectedAssignment] = useState(\"placeholder\");\r\n  const [AssignmentFeedbackList, setAssignmentFeedbackList] = useState([]);\r\n  const [noFeedbackVisible, setNoFeedbackVisible] = useState(\"invisible\");\r\n\r\n  // This useEffect pulls the assignments of a module and pushes it to a useState, it also sets the initially picked assignment\r\n  // as the first one in this array.\r\n  useEffect(() => {\r\n    const setAssignmentInfo = () => {\r\n      db.collection(\"Courses\")\r\n        .doc(\"Computer Science\")\r\n        .collection(\"modules\")\r\n        .doc(props.input)\r\n        .collection(\"Assignments\")\r\n        .get()\r\n        .then((snapshot) => {\r\n          const assignments = [];\r\n          snapshot.forEach((doc) => {\r\n            const data = doc.data();\r\n            assignments.push(data);\r\n          });\r\n          setAssignmentList(assignments);\r\n          setSelectedAssignment(assignments[0].Title);\r\n        })\r\n        .catch((error) => console.log(error));\r\n    };\r\n    setAssignmentInfo();\r\n  }, []);\r\n\r\n  // This function gets the feedback for a particular assignment using the module prop as well as the selected Assignment useSate\r\n  // set in the useEffect above. It then sets these assignments to the AssignmentFeedbackList useState\r\n  function getAssignmentFeedbackList() {\r\n    setAssignmentFeedbackList([]);\r\n\r\n    const setAssignmentFeedbackListInfo = () => {\r\n      setNoFeedbackVisible(\"invisible\");\r\n      db.collection(\"Courses\")\r\n        .doc(\"Computer Science\")\r\n        .collection(\"modules\")\r\n        .doc(props.input)\r\n        .collection(\"Assignments\")\r\n        .doc(selectedAssignment)\r\n        .collection(\"feedback\")\r\n        .orderBy(\"createdAt\")\r\n        .get()\r\n        .then((snapshot) => {\r\n          const feedback = [];\r\n          snapshot.forEach((doc) => {\r\n            const data = doc.data();\r\n            feedback.push(data);\r\n          });\r\n          if (feedback.length === 0) {\r\n            setNoFeedbackVisible(\"visible\");\r\n          }\r\n\r\n          setAssignmentFeedbackList(feedback);\r\n        })\r\n\r\n        .catch((error) => console.log(error));\r\n    };\r\n\r\n    setAssignmentFeedbackListInfo();\r\n  }\r\n\r\n  // This component takes in message object and uses the fields to create a card with the Date formatted and the text.\r\n  function FeedbackMessage({ message }) {\r\n    const { text, createdAt } = message;\r\n    const date = createdAt && createdAt.toDate();\r\n    let output = \"DataBase Error!\";\r\n    if (date != null) {\r\n      const month = date.getUTCMonth() + 1;\r\n      const day = date.getUTCDate();\r\n      const year = date.getUTCFullYear();\r\n      const time = date.getUTCHours() + \":\" + date.getUTCMinutes();\r\n      output = year + \"/\" + month + \"/\" + day + \" \" + time;\r\n    }\r\n    return (\r\n      <div\r\n        className=\"card card-body post-editor text-light\"\r\n        style={{ backgroundColor: \"#424242\" }}\r\n      >\r\n        <p style={{ color: \"\" }}>{output}</p>\r\n        {text}{\" \"}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\" align-content-center\" style={{ paddingLeft: \"20px\" }}>\r\n      <h2\r\n        style={{ paddingTop: \"60px\", paddingBottom: \"20px\" }}\r\n        className=\"text-md-center text\"\r\n      >\r\n        <u>Assignment Feedback</u>\r\n      </h2>\r\n      <form>\r\n        <select\r\n          style={{\r\n            backgroundColor: \"#1A1A1B\",\r\n            color: \"white\",\r\n            borderRadius: \"4px\",\r\n          }}\r\n          className=\"custom-select-sm\"\r\n          value={selectedAssignment}\r\n          onChange={(e) => setSelectedAssignment(e.currentTarget.value)}\r\n        >\r\n          {AssignmentList &&\r\n            AssignmentList.map((module) => (\r\n              <option key={module.Title} value={module.Title}>\r\n                {module.Title}\r\n              </option>\r\n            ))}\r\n        </select>\r\n      </form>\r\n\r\n      <div style={{ paddingTop: \"10px\" }}>\r\n        <Button\r\n          onClick={getAssignmentFeedbackList}\r\n          variant=\"success\"\r\n          style={{ backgroundColor: \"#1A1A1B\" }}\r\n        >\r\n          View\r\n        </Button>\r\n      </div>\r\n\r\n      <div className=\"text-md-center border-danger\">\r\n        <h5 className={noFeedbackVisible}>\r\n          There doesn't seem to be any feedback for this assignment yet, perhaps\r\n          ask your students to submit some{\" \"}\r\n        </h5>\r\n      </div>\r\n\r\n      <div>\r\n        {AssignmentFeedbackList?.map((message) => (\r\n          <FeedbackMessage key={message.id} message={message} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Admin\\components\\createThread.js",[],"C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Admin\\components\\ModuleThreadsListComp.js",[],"C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Admin\\components\\ViewFeedbackPageComp.js",["337","338"],"import React, { useState } from \"react\";\r\nimport AdminNavBar from \"../NavBar/AdminNavBar\";\r\nimport { db } from \"../../firebase\";\r\nimport { useCollectionData } from \"react-firebase-hooks/firestore\";\r\nimport \"../css-files/feedback.css\";\r\n\r\n/**\r\n * Created by: Luke Waterhouse\r\n * This file contains component that take in a module as a prop and display the feedback for it from the database.\r\n */\r\n\r\nfunction GetFeedback(props) {\r\n  const feedbackRef = db\r\n    .collection(\"Courses\")\r\n    .doc(\"Computer Science\")\r\n    .collection(\"modules\")\r\n    .doc(props.moduleName)\r\n    .collection(\"feedback\");\r\n  const query = feedbackRef.orderBy(\"createdAt\").limit(25);\r\n  const [feedback] = useCollectionData(query, { idField: \"id\" });\r\n  const error = \"\";\r\n  console.log(feedback);\r\n  return (\r\n    <div>\r\n      <div>\r\n        <h3 className=\"text-md-center\">General feedback</h3>\r\n\r\n        {feedback?.map((message) => (\r\n          <FeedbackMessage\r\n            key={message.id}\r\n            message={message}\r\n            style={{ padding: \"90px\" }}\r\n          />\r\n        ))}\r\n\r\n        {feedback?.length ? (\r\n          error\r\n        ) : (\r\n          <h4 className=\"text-md-center\">\r\n            There doesn't seem to be any general feedback for this module yet,\r\n            try asking your students to add some\r\n          </h4>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n//takes in a piece of feedback object and destructures it to display it in a card.\r\n\r\nfunction FeedbackMessage({ message }) {\r\n  const { text, createdAt } = message;\r\n  const date = createdAt && createdAt.toDate();\r\n  let output = \"DataBase Error!\";\r\n  if (date != null) {\r\n    const month = date.getUTCMonth() + 1;\r\n    const day = date.getUTCDate();\r\n    const year = date.getUTCFullYear();\r\n    const time = date.getUTCHours() + \":\" + date.getUTCMinutes();\r\n    output = year + \"/\" + month + \"/\" + day + \" \" + time;\r\n  }\r\n  return (\r\n    <div\r\n      className=\"card card-body post-editor\"\r\n      style={{ backgroundColor: \"#424242\", color: \"#E0E0E0\" }}\r\n    >\r\n      <p style={{ color: \"#9E9E9E\" }}>{output}</p>\r\n      {text}{\" \"}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction ViewFeedbackPageComp(props) {\r\n  return (\r\n    <div>\r\n      <h1 style={{ paddingBottom: \"40px\" }} className=\"text-md-center\">\r\n        <u>{props.input}</u>\r\n      </h1>\r\n      <GetFeedback moduleName={props.input} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ViewFeedbackPageComp;\r\n","C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Admin\\components\\AssignmentsListed.js",[],"C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Admin\\components\\ModuleGroup.js",[],"C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Student\\NavBar\\StudentMenuItems.js",[],"C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Login-Register\\Logout.js",[],"C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Admin\\components\\AdminSubmissionDisplay.js",["339","340"],"C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Admin\\components\\createModule.js",[],"C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Admin\\components\\ModulePage.js",["341"],"import React, { Component, useEffect, useState } from \"react\";\r\nimport { db } from \"../../firebase\";\r\nimport DeleteModule from \"./deleteModule\";\r\nimport ReactMarkdown from \"react-markdown\";\r\n\r\n/**\r\n * Created by: Mantas Aleskevicius\r\n * CSS: Mantas Aleskevicius\r\n * This file displays module description and allows user to change it with markDown\r\n */\r\n\r\nfunction DescriptionShow({ moduleName }) {\r\n  const ModuleRef = db\r\n    .collection(\"Courses\")\r\n    .doc(\"Computer Science\")\r\n    .collection(\"modules\")\r\n    .doc(moduleName);\r\n  const [description, setDescription] = useState(\"\");\r\n\r\n  //Pulling the description of the module from the database\r\n  useEffect(() => {\r\n    ModuleRef.get()\r\n      .then((snapshot) => {\r\n        setDescription(snapshot.data().description);\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error getting documents\", err);\r\n      });\r\n  }, []);\r\n\r\n  //Updates the description in the database\r\n  const textCreate = async (e) => {\r\n    e.preventDefault();\r\n\r\n    await ModuleRef.update({\r\n      description: description,\r\n    });\r\n  };\r\n\r\n  //Return a preview of the description and a form to change it\r\n  return (\r\n    <div className=\"descriptionShow\">\r\n      <div className=\"descriptionShow_preview\">\r\n        <div className=\"descriptionShow_previewTitle\">Preview</div>\r\n        <ReactMarkdown className=\"markdownField\" source={description} />\r\n      </div>\r\n      <form className=\"descriptionShow_form\" onSubmit={textCreate}>\r\n        <button className=\"descriptionShow_formButton\" type=\"submit\">\r\n          Done\r\n        </button>\r\n        <textarea\r\n          className=\"descriptionShow_formText\"\r\n          value={description}\r\n          onChange={(e) => setDescription(e.target.value)}\r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\n//Displays module's information\r\nclass ModulePage extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"modulePage\">\r\n        <h2>{this.props.moduleName}</h2>\r\n        <DeleteModule thisId={this.props.moduleName} />\r\n        <DescriptionShow moduleName={this.props.moduleName} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ModulePage;\r\n","C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Admin\\NavBar\\AdminMenuItems.js",[],"C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\DataAnalysis\\TestingEasySolution.js",["342"],"import React, { useEffect, useState } from \"react\";\r\nimport { db } from \"../firebase\";\r\nimport BarChart from \"./BarChart\";\r\nimport BarFormat from \"./SimpleBarFormat\";\r\nimport \"./GraphElement.css\";\r\n\r\n/**\r\n * Created by: Harry Clifford\r\n * Displays a graph and list of assignments to be displayed on the webpage\r\n */\r\n\r\nlet labels = [\r\n  { key: \"Median\", color: \"#260080\" },\r\n  { key: \"Mean\", color: \"#03DAC6\" },\r\n  { key: \"UQ\", color: \"#EBAF4C\" },\r\n  { key: \"LQ\", color: \"#00E600\" },\r\n];\r\n\r\n// Outputs the graph and assignment list for the results pages\r\nexport default function TestingEasySolution() {\r\n  // Set's default use state's and data logging for firebase\r\n  const [Assignments, SetAssignments] = useState([]);\r\n  const [Modules, SetModules] = useState([]);\r\n  const [Data, SetData] = useState([]);\r\n  const [BarGraph, SetGraph] = useState(<h3>Graph Loading</h3>);\r\n  const modules = [];\r\n  const assignments = [];\r\n\r\n  useEffect(() => {\r\n    // Sets modules to have a list of all modules\r\n    function returnAssignments() {\r\n      db.collection(\"Courses\")\r\n        .doc(\"Computer Science\")\r\n        .collection(\"modules\")\r\n        .get()\r\n        .then((snapshot) => {\r\n          snapshot.forEach((doc) => {\r\n            const data = doc.data();\r\n            modules.push(data.Title);\r\n          });\r\n          SetModules(modules);\r\n          getAssignments();\r\n        })\r\n        .catch((error) => console.log(error));\r\n    }\r\n    // Set's up the assignments to have mark details to be used by SimpleBarFormat and the AssignmentList\r\n    function getAssignments() {\r\n      SetAssignments([]);\r\n      for (let i = 0; i < modules.length; i++) {\r\n        db.collection(\"Courses\")\r\n          .doc(\"Computer Science\")\r\n          .collection(\"modules\")\r\n          .doc(modules[i])\r\n          .collection(\"Assignments\")\r\n          .get()\r\n          .then((snapshot) => {\r\n            snapshot.forEach((doc) => {\r\n              const data = doc.data();\r\n              if (data.Graded === true) {\r\n                assignments.push({\r\n                  MarkList: data.MarkList,\r\n                  Title: data.Title,\r\n                  MaxMark: data.Marks,\r\n                });\r\n              }\r\n            });\r\n            SetAssignments(assignments);\r\n          });\r\n      }\r\n    }\r\n    returnAssignments();\r\n  }, []);\r\n  // Update the data to be used by the graph as the list of modules and assignments changes\r\n  useEffect(() => {\r\n    function updateData() {\r\n      SetData(BarFormat(Assignments));\r\n    }\r\n    updateData();\r\n  }, [Assignments, Modules]);\r\n  // Updates the graph everytime the data to be displayed within changes\r\n  useEffect(() => {\r\n    function updateGraph() {\r\n      if (Data !== []) {\r\n        SetGraph(<BarChart key={Data.length} data={Data} labels={labels} />);\r\n      }\r\n    }\r\n    updateGraph();\r\n  }, [Data]);\r\n  // Returns the graph along with a list of assignments\r\n  return (\r\n    <div>\r\n      {BarGraph}\r\n      {Data.map((data) => (\r\n        <div className=\"AssignmentList\" key={data.Title}>\r\n          <h5> {data.Title} </h5>\r\n          <p>\r\n            Mark: {data.Mark}% Median: {data.Median}% Mean: {data.Mean}%\r\n          </p>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Student\\components\\StudentModulePage.js",[],"C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\DataAnalysis\\SimpleBarFormat.js",["343","344"],"import findMedian from \"./Median\";\r\nimport findQuartiles from \"./Quartiles\";\r\nimport { db } from \"../firebase\";\r\n\r\n/**\r\n * Created by: Harry Clifford\r\n * Format's data to be displayed by Rechart's bar chart\r\n */\r\n\r\n// Returns the formatted data for a bar chart\r\nfunction BarFormat(data) {\r\n  if (data[0] === undefined) {\r\n    return [];\r\n  }\r\n  // Finds the averages for each individual assignment and adds them to an array\r\n  let newData = [];\r\n  for (let i = 0; i < data.length; i++) {\r\n    let MarkList = data[i].MarkList;\r\n    MarkList = MarkList.sort(compareFunction);\r\n    let Title = data[i].Title;\r\n    let MaxMark = data[i].MaxMark;\r\n    let median = findMedian(MarkList);\r\n    let quartiles = findQuartiles(MarkList, median[1], MarkList.length);\r\n    let mean = 0;\r\n    for (let x = 0; x < MarkList.length; x++) {\r\n      mean += MarkList[x];\r\n    }\r\n    mean = mean / MarkList.length;\r\n    mean = Percentage(mean, MaxMark);\r\n    let Mark = 20;\r\n    Mark = Percentage(Mark, MaxMark);\r\n    newData.push({\r\n      Title: Title,\r\n      Median: Percentage(median[0], MaxMark),\r\n      Mark: Mark,\r\n      UQ: Percentage(quartiles[1][0], MaxMark),\r\n      LQ: Percentage(quartiles[0][0], MaxMark),\r\n      Mean: mean,\r\n    });\r\n  }\r\n  return newData;\r\n}\r\n\r\nfunction userMark() {\r\n  let Mark = \"\";\r\n  //Code for getting the user's specific mark may go here\r\n  return Mark;\r\n}\r\n\r\n// Returns the percentage acheieved relative to the maximum available\r\nfunction Percentage(achieved, max) {\r\n  var percentage = (achieved / max) * 100;\r\n  percentage = +percentage.toFixed(2);\r\n  return percentage;\r\n}\r\n\r\n// When used with sort returns a numerically ordered list from lowest to highest\r\nfunction compareFunction(a, b) {\r\n  return a - b;\r\n}\r\n\r\nexport default BarFormat;\r\n","C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\Admin\\components\\deleteModule.js",[],"C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\DataAnalysis\\BarChart.js",["345"],"import React, { Component } from \"react\";\r\nimport {\r\n  Legend,\r\n  ComposedChart,\r\n  Bar,\r\n  Line,\r\n  CartesianGrid,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip,\r\n  Label,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\nimport CSS from \"./GraphElement.css\";\r\n\r\n/**\r\n * Created by: Harry Clifford\r\n * Code to create a bar chart in recharts with a custom toggleable legend\r\n */\r\n\r\nlet data = [];\r\n\r\n// Creates a Rechart bar chart with interactive legend\r\nclass BarChart extends Component {\r\n  // Set up class properties\r\n  constructor(props) {\r\n    super(props);\r\n    this.selectBar = this.selectBar.bind(this);\r\n    data = props.data;\r\n    this.state = {\r\n      labels: this.props.labels,\r\n    };\r\n  }\r\n  // Update legend on click to hide/show lines\r\n  selectBar(event) {\r\n    let updatedLabels = [];\r\n    for (let i = 0; i < this.state.labels.length; i++) {\r\n      let label = this.state.labels[i];\r\n      if (label.key !== event.dataKey) {\r\n        updatedLabels.push(label);\r\n      } else {\r\n        if (/\\s/.test(label.key)) {\r\n          let newLabel = { key: label.key.trim(), color: label.color };\r\n          updatedLabels.push(newLabel);\r\n        } else {\r\n          let newLabel = { key: label.key + \" \", color: label.color };\r\n          updatedLabels.push(newLabel);\r\n        }\r\n      }\r\n    }\r\n    this.setState({\r\n      labels: updatedLabels,\r\n    });\r\n  }\r\n  // Renders bar chart\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ResponsiveContainer className=\"MarkGraph\" width=\"90%\" height={600}>\r\n          <ComposedChart data={data} margin={{ top: 10, bottom: 30 }}>\r\n            <Bar dataKey=\"Mark\" fill=\"#BB86FC\" />\r\n            <CartesianGrid stroke=\"#626262\" strokeDasharray=\"3 3\" />\r\n            <XAxis\r\n              dataKey=\"Title\"\r\n              axisLine={{ stroke: \"#626262\" }}\r\n              tick={{ dy: 7 }}\r\n              stroke=\"#626262\"\r\n              tickInterval=\"150\"\r\n              tickCount-=\"{data.length}\"\r\n            >\r\n              <Label\r\n                value=\"Assignments\"\r\n                position=\"insideBottom\"\r\n                offset={-40}\r\n                stroke=\"#F8F8FF\"\r\n              />\r\n            </XAxis>\r\n            <YAxis\r\n              domain={[0, 100]}\r\n              tickInterval=\"10\"\r\n              tickCount=\"11\"\r\n              axisLine={{ stroke: \"#626262\" }}\r\n              stroke=\"#626262\"\r\n            >\r\n              <Label\r\n                value=\"Marks (%)\"\r\n                angle=\"-90\"\r\n                position=\"left\"\r\n                offset={-17.5}\r\n                stroke=\"#F8F8FF\"\r\n              />\r\n            </YAxis>\r\n            <Tooltip contentStyle={{ background: \"#626262\" }} />\r\n            <Legend\r\n              onClick={this.selectBar}\r\n              wrapperStyle={{ paddingLeft: \"4%\", paddingTop: \"5px\" }}\r\n            />\r\n            {this.state.labels.map((label, index) => (\r\n              <Line\r\n                key={index}\r\n                dataKey={label.key}\r\n                fill={label.color}\r\n                stroke={label.color}\r\n                strokeWidth=\"2px\"\r\n                stackId={this.state.dataKey}\r\n              />\r\n            ))}\r\n          </ComposedChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default BarChart;\r\n","C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\DataAnalysis\\Median.js",["346"],"/**\r\n * Created by: Harry Clifford\r\n * Returns an array with the median's value and locatiom\r\n */\r\n\r\n// Returns an array with the median's value and location\r\nexport default function findMedian(array) {\r\n  var trueMedian = 0;\r\n  var middleLocation = 0;\r\n  if (array.length % 2 == 0) {\r\n    middleLocation = array.length / 2 - 0.5;\r\n    trueMedian = (array[array.length / 2 - 1] + array[array.length / 2]) / 2;\r\n  } else {\r\n    middleLocation = array.length / 2 - 0.5;\r\n    trueMedian = array[array.length / 2 - 0.5];\r\n  }\r\n\r\n  return [trueMedian, middleLocation];\r\n}\r\n","C:\\Users\\Admin\\WebstormProjects\\epic-learning-and-engagement-tool-2\\src\\DataAnalysis\\Quartiles.js",["347","348","349"],"import findMedian from \"./Median\";\r\n\r\n/**\r\n * Created by: Harry Clifford\r\n * Returns a 2D array with the Lower Quartiles value and position\r\n * and then the Upper Quartiles value and position\r\n */\r\n\r\n// Returns a 2D array with the lower and upper quartiles information\r\nexport default function findQuartiles(array, median, totalStudents) {\r\n  var trueLQ = 0;\r\n  var trueUQ = 0;\r\n  // Finds the correct sub array's to find the median of the correct halves of the data\r\n  if (array.length % 2 == 0) {\r\n    var lowerRange = array.slice(0, median + 0.5);\r\n    var upperRange = array.slice(median + 0.5, array.length);\r\n  } else {\r\n    var lowerRange = array.slice(0, median);\r\n    var upperRange = array.slice(median, array.length);\r\n  }\r\n  trueLQ = findMedian(lowerRange);\r\n  trueUQ = findMedian(upperRange);\r\n  trueUQ[1] = trueUQ[1] + totalStudents / 2;\r\n  return [trueLQ, trueUQ];\r\n}\r\n",{"ruleId":"350","replacedBy":"351"},{"ruleId":"352","replacedBy":"353"},{"ruleId":"354","severity":1,"message":"355","line":56,"column":9,"nodeType":"356","messageId":"357","endLine":65,"endColumn":10},{"ruleId":"354","severity":1,"message":"355","line":115,"column":13,"nodeType":"356","messageId":"357","endLine":123,"endColumn":14},{"ruleId":"358","severity":1,"message":"359","line":132,"column":6,"nodeType":"360","endLine":132,"endColumn":8,"suggestions":"361"},{"ruleId":"362","severity":1,"message":"363","line":3,"column":8,"nodeType":"364","messageId":"365","endLine":3,"endColumn":11},{"ruleId":"362","severity":1,"message":"366","line":1,"column":17,"nodeType":"364","messageId":"365","endLine":1,"endColumn":25},{"ruleId":"362","severity":1,"message":"367","line":1,"column":27,"nodeType":"364","messageId":"365","endLine":1,"endColumn":36},{"ruleId":"362","severity":1,"message":"366","line":1,"column":17,"nodeType":"364","messageId":"365","endLine":1,"endColumn":25},{"ruleId":"362","severity":1,"message":"367","line":1,"column":27,"nodeType":"364","messageId":"365","endLine":1,"endColumn":36},{"ruleId":"362","severity":1,"message":"366","line":1,"column":17,"nodeType":"364","messageId":"365","endLine":1,"endColumn":25},{"ruleId":"362","severity":1,"message":"367","line":1,"column":27,"nodeType":"364","messageId":"365","endLine":1,"endColumn":36},{"ruleId":"362","severity":1,"message":"368","line":5,"column":20,"nodeType":"364","messageId":"365","endLine":5,"endColumn":29},{"ruleId":"362","severity":1,"message":"369","line":3,"column":10,"nodeType":"364","messageId":"365","endLine":3,"endColumn":12},{"ruleId":"362","severity":1,"message":"370","line":4,"column":10,"nodeType":"364","messageId":"365","endLine":4,"endColumn":27},{"ruleId":"362","severity":1,"message":"371","line":5,"column":10,"nodeType":"364","messageId":"365","endLine":5,"endColumn":14},{"ruleId":"362","severity":1,"message":"372","line":3,"column":8,"nodeType":"364","messageId":"365","endLine":3,"endColumn":24},{"ruleId":"362","severity":1,"message":"367","line":1,"column":17,"nodeType":"364","messageId":"365","endLine":1,"endColumn":26},{"ruleId":"373","severity":1,"message":"374","line":23,"column":13,"nodeType":"375","endLine":23,"endColumn":31},{"ruleId":"358","severity":1,"message":"376","line":84,"column":6,"nodeType":"360","endLine":84,"endColumn":8,"suggestions":"377"},{"ruleId":"378","severity":1,"message":"379","line":43,"column":7,"nodeType":"375","endLine":43,"endColumn":35},{"ruleId":"380","severity":1,"message":"381","line":71,"column":13,"nodeType":"382","messageId":"383","endLine":71,"endColumn":20},{"ruleId":"358","severity":1,"message":"384","line":38,"column":6,"nodeType":"360","endLine":38,"endColumn":8,"suggestions":"385"},{"ruleId":"362","severity":1,"message":"386","line":2,"column":14,"nodeType":"364","messageId":"365","endLine":2,"endColumn":18},{"ruleId":"362","severity":1,"message":"387","line":2,"column":10,"nodeType":"364","messageId":"365","endLine":2,"endColumn":17},{"ruleId":"362","severity":1,"message":"388","line":3,"column":10,"nodeType":"364","messageId":"365","endLine":3,"endColumn":17},{"ruleId":"362","severity":1,"message":"389","line":4,"column":10,"nodeType":"364","messageId":"365","endLine":4,"endColumn":18},{"ruleId":"373","severity":1,"message":"374","line":23,"column":11,"nodeType":"375","endLine":23,"endColumn":29},{"ruleId":"362","severity":1,"message":"387","line":2,"column":10,"nodeType":"364","messageId":"365","endLine":2,"endColumn":17},{"ruleId":"362","severity":1,"message":"388","line":3,"column":10,"nodeType":"364","messageId":"365","endLine":3,"endColumn":17},{"ruleId":"362","severity":1,"message":"389","line":4,"column":10,"nodeType":"364","messageId":"365","endLine":4,"endColumn":18},{"ruleId":"362","severity":1,"message":"386","line":5,"column":13,"nodeType":"364","messageId":"365","endLine":5,"endColumn":17},{"ruleId":"362","severity":1,"message":"390","line":9,"column":9,"nodeType":"364","messageId":"365","endLine":9,"endColumn":24},{"ruleId":"362","severity":1,"message":"391","line":26,"column":13,"nodeType":"364","messageId":"365","endLine":26,"endColumn":16},{"ruleId":"358","severity":1,"message":"392","line":45,"column":7,"nodeType":"360","endLine":45,"endColumn":9,"suggestions":"393"},{"ruleId":"378","severity":1,"message":"379","line":40,"column":7,"nodeType":"375","endLine":40,"endColumn":35},{"ruleId":"378","severity":1,"message":"379","line":36,"column":7,"nodeType":"375","endLine":36,"endColumn":35},{"ruleId":"358","severity":1,"message":"384","line":39,"column":6,"nodeType":"360","endLine":39,"endColumn":8,"suggestions":"394"},{"ruleId":"362","severity":1,"message":"366","line":1,"column":17,"nodeType":"364","messageId":"365","endLine":1,"endColumn":25},{"ruleId":"362","severity":1,"message":"395","line":2,"column":8,"nodeType":"364","messageId":"365","endLine":2,"endColumn":19},{"ruleId":"362","severity":1,"message":"371","line":4,"column":52,"nodeType":"364","messageId":"365","endLine":4,"endColumn":56},{"ruleId":"378","severity":1,"message":"379","line":93,"column":17,"nodeType":"375","endLine":93,"endColumn":45},{"ruleId":"358","severity":1,"message":"396","line":29,"column":6,"nodeType":"360","endLine":29,"endColumn":8,"suggestions":"397"},{"ruleId":"358","severity":1,"message":"398","line":72,"column":6,"nodeType":"360","endLine":72,"endColumn":8,"suggestions":"399"},{"ruleId":"362","severity":1,"message":"369","line":3,"column":10,"nodeType":"364","messageId":"365","endLine":3,"endColumn":12},{"ruleId":"362","severity":1,"message":"400","line":44,"column":10,"nodeType":"364","messageId":"365","endLine":44,"endColumn":18},{"ruleId":"362","severity":1,"message":"363","line":14,"column":8,"nodeType":"364","messageId":"365","endLine":14,"endColumn":11},{"ruleId":"401","severity":1,"message":"402","line":10,"column":24,"nodeType":"403","messageId":"404","endLine":10,"endColumn":26},{"ruleId":"401","severity":1,"message":"402","line":14,"column":24,"nodeType":"403","messageId":"404","endLine":14,"endColumn":26},{"ruleId":"405","severity":1,"message":"406","line":18,"column":9,"nodeType":"364","messageId":"407","endLine":18,"endColumn":19},{"ruleId":"405","severity":1,"message":"408","line":19,"column":9,"nodeType":"364","messageId":"407","endLine":19,"endColumn":19},"no-native-reassign",["409"],"no-negated-in-lhs",["410"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'authListener'. Either include it or remove the dependency array.","ArrayExpression",["411"],"no-unused-vars","'CSS' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useEffect' is defined but never used.","'CardGroup' is defined but never used.","'db' is defined but never used.","'useCollectionData' is defined but never used.","'Link' is defined but never used.","'AdminAssignments' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'AssignmentsToSet' and 'modules'. Either include them or remove the dependency array.",["412"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","React Hook useEffect has a missing dependency: 'props.input'. Either include it or remove the dependency array.",["413"],"'auth' is defined but never used.","'connect' is defined but never used.","'compose' is defined but never used.","'Redirect' is defined but never used.","'useDocumentData' is defined but never used.","'ass' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.input' and 'props.module'. Either include them or remove the dependency array.",["414"],["415"],"'AdminNavBar' is defined but never used.","React Hook useEffect has a missing dependency: 'ModuleRef'. Either include it or remove the dependency array.",["416"],"React Hook useEffect has missing dependencies: 'assignments' and 'modules'. Either include them or remove the dependency array.",["417"],"'userMark' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-redeclare","'lowerRange' is already defined.","redeclared","'upperRange' is already defined.","no-global-assign","no-unsafe-negation",{"desc":"418","fix":"419"},{"desc":"420","fix":"421"},{"desc":"422","fix":"423"},{"desc":"424","fix":"425"},{"desc":"422","fix":"426"},{"desc":"427","fix":"428"},{"desc":"429","fix":"430"},"Update the dependencies array to be: [authListener]",{"range":"431","text":"432"},"Update the dependencies array to be: [AssignmentsToSet, modules]",{"range":"433","text":"434"},"Update the dependencies array to be: [props.input]",{"range":"435","text":"436"},"Update the dependencies array to be: [props.input, props.module]",{"range":"437","text":"438"},{"range":"439","text":"436"},"Update the dependencies array to be: [ModuleRef]",{"range":"440","text":"441"},"Update the dependencies array to be: [assignments, modules]",{"range":"442","text":"443"},[4278,4280],"[authListener]",[3054,3056],"[AssignmentsToSet, modules]",[1454,1456],"[props.input]",[1593,1595],"[props.input, props.module]",[1532,1534],[880,882],"[ModuleRef]",[2318,2320],"[assignments, modules]"]